@startuml Controle de entrega de pedidos (delivery)

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0
!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define DEVICONS2 https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons2
!define RABBITMQURL https://raw.githubusercontent.com/plantuml/plantuml-stdlib/master/cloudinsight

!include DEVICONS/nodejs.puml
!include DEVICONS/mysql.puml
!include DEVICONS2/nestjs.puml
!include RABBITMQURL/rabbitmq.puml

AddRelTag("async", $lineStyle = DashedLine())
AddContainerTag(payment, $fontColor="#0A0A0A", $borderColor="#438DD5", $legendText="payment", $bgColor="#8698C0")

title "Diagrama de Conteineres do Sistema de Controle de Entrega de Pedidos"

SHOW_PERSON_PORTRAIT()
LAYOUT_LANDSCAPE()

Person(admin, "Admin")
Person(user, "User")
Person(deliveryman, "Deliveryman")

System_Boundary(delivery_context, "Delivery Context") {
    Container(deliverybff, "delivery-bff", "Nestjs","BFF da api", $sprite = "nestjs")
    Container(deliveryapi, "delivery-api", "NodeJs","Provê funcionalidades para controle de entregas de pedidos via API", $sprite = "nodejs")
    Container(deliverydb, "delivery-db", "MySQL", "Banco de dados", $sprite = "mysql")
}

System_Boundary(payment_context, "Payment Context") {
    Container(deliveryworker, "delivery-worker", "Kotlin","Consome os pedidos da fila, processa o pagamento e envia pra api", $sprite = "kotlin", $tags="payment")
    ContainerQueue(deliverymq, "delivery-queue", "RabbitMQ", "Armazena os pedidos realizados", $sprite = "rabbitmq", $tags="payment")
}

Rel(admin, deliverybff, "Faz uso do", "[sync/json/https]")
Rel(user, deliverybff, "Faz uso do", "[sync/json/https]")
Rel(deliveryman, deliverybff, "Faz uso do", "[sync/json/https]")
Rel(deliverybff, deliveryapi, "Faz uso do", "[sync/json/https]")
Rel(deliveryapi, deliverydb, "Lê e escreve em", "[sync/SQL]")
Rel(deliveryapi, deliverymq, "Envia para", "[json]", $tags = "async")
Rel_D(deliveryworker, deliverymq, "Consome em", "[json]", $tags = "async")
Rel(deliveryworker, deliveryapi, "Faz o uso do", "[json/https]", $tags = "async")

@enduml